#! pending: need to consolidate [protein walkthrough](walkthrough_protein) (also available on [Ryan's site](http://www.scattershot.co/posts/2017-11-01-demo-factory-v1.html)).

- name: create a factory
  short: create_factory
  manual: |
    Users can create a factory by cloning [`http://github.com/biophyscode/factory`](http://github.com/biophyscode/factory). 
    The `make help` command provides instructions at the terminal. 
    The [quickstart guide to installing the factory](BASE_URL/#factory) provides more complete instructions.
  guide: |
    The unit test for the factory is completed from a separate, testing factory explained in the [Docker quickstart guide](BASE_URL/#docker) which gets the units tests from a [separate repository](https://github.com/bradleyrp/factory-testset).
    Run the unit test `factory setup` from [`testset.py`](https://github.com/bradleyrp/factory-testset/blob/master/testset.py) via `make test factory setup` to complete the test and generate the factory for other tests.
    If you have not yet prepared any Docker images, then this unit test will build them for you, so it might take a few minutes.
    Note that this method is a common starting point for many other tests.
- name: simulate and analyze an atomistic protein
  short: atomistic_protein
  manual: |
    This test covers the quick start guide for [analyzing preexisting simulation data](BASE_URL/#calculation). Expert users can follow the [docker quickstart guide](BASE_URL/#docker) using [the factory testset](http://github.com/bradleyrp/factory-testset) to test it. New users are encouraged to try the [quickstart guide](BASE_URL/#calculation) to run the code themselves. In this example, you start with a previous simulation of an atomistic protein in GROMACS generated by a standalone automacs simulation and then compute the protein RMSD, make a simple plot, and generate a video using [VMD](http://www.ks.uiuc.edu/Research/vmd/).
  guide: |
    Create a [testing factory](BASE_URL/#docker) with units tests from the [factory-testset](https://github.com/bradleyrp/factory-testset).
    Run unit test `make test demo protein generate` to generate data.
    Run unit test `make test demo protein` to run this test, which includes everything covered in the [quickstart guide](BASE_URL/#calculation). Note that the testset will create a new omnicalc project with calculation codes from the [omni-basic](http://github.com/biophyscode/omni-basic) repository. The data-generation portion of the test effectively covers the [standalone automacs test](#standalone_automacs).
- name: Standalone AUTOMACS simulation
  short: standalone_automacs
  manual: |
    Generate an atomistic protein simulation using a standalone copy of automacs according to the [quickstart guide](BASE_URL/#automacs).
    The atomistic protein simulation can be completed without a factory.
- name: Autoplot feature
  short: autoplot
  testing_note: |
    Several unit tests, particularly the [simulation-analysis pipeline](#demo_serve) and the [coarse-grained bilayer](#demo_serve_cgmd_bilayers) tests, include this feature.
  manual: |
    Some omnicalc plot scripts use a method called "autoplot" which makes it possible to write somewhat more modular plotting codes. This feature is described in a [separate guide](BASE_URL/autoplot/).
- name: Simulation notebook
  short: simulation_notebook
  manual: |
    In addition to running simulations in the [factory interface](BASE_URL/#pipeline) or a [standalone automacs instance](BASE_URL/#automacs), users can also use a notebook to run a simulation. This feature is described in a [separate guide](BASE_URL/simulation_notebook/).
- name: Simulation-analysis pipeline
  short: demo_serve
  manual: |
    The [simulation-analysis pipeline walkthrough](BASE_URL/walkthrough) shows users how to set up the factory and use the web interface to run and analyze a simulation.
  guide: |
    Create a [testing factory](BASE_URL/#docker) with units tests from the [factory-testset](https://github.com/bradleyrp/factory-testset).
    Run the `make test factory setup` unit test to create a factory.
    The testing factory should have a file at `factory-testset/tests/testset.py` where you can set the open ports and hostname for serving the factory over the internet. These settings can be found in the `demo serve` section.
    Once you have set these values, run the unit test `make test demo serve` in the usual way. Then you may complete the [simulation-analysis pipeline walkthrough](BASE_URL/walkthrough) using the graphical interface.
    Note that this test includes the atomistic protein walkthrough (we have a separate test for the [coarse-grained bilayer](#demo_serve_cgmd_bilayers)) and the [video rendering](BASE_URL/walkthrough#render_videos) instructions.
- name: Coarse-grained bilayer demonstration
  short: demo_serve_cgmd_bilayers
  manual: |
    An addition to the [simulation-analysis pipeline walkthrough](BASE_URL/walkthrough#cgmd_bilayers) includes a tutorial for creating coarse-grained bilayers. The analysis of the bilayers includes an extra library for generating abstract mesh structures of the bilayer as well as use of the [autoplot method](BASE_URL/autoplot). 
  guide: |
    Run the unit test named `make test demo serve` as per the [pipeline test above](#demo_serve) and follow the [coarse-grained bilayer walkthrough](BASE_URL/walkthrough#cgmd_bilayers). This test should get all of the necessary calculation codes from the [omni-basic](http://github.com/biophyscode/omni-basic) repository. You may also test the [autoplot demonstration](BASE_URL/autoplot) from the command line.
